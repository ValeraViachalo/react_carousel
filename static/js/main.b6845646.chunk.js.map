{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","params","changedCarousel","useState","firstItem","setFirstItem","styleForCarousel","width","itemWidth","frameSize","transition","animationDuration","styleContainerImage","transform","disabledForNextButton","infinite","length","disabledForPrevButton","styleImage","height","maxWidth","handleOnChange","input","event","value","target","className","style","map","currentImage","src","url","alt","id","toFixed","type","onClick","prevItem","step","disabled","nextItem","htmlFor","name","min","max","onChange","defaultChecked","e","checked","defaultSettings","firstImg","App","setParams","img","filterParams","firstImgIndex","findIndex","el","slice","getPreparedImages","imagesFromServer","key","validValue","previousParams","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b6845646.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nimport './Carousel.scss';\n\nimport { Image } from '../types/Image';\nimport { Params } from '../types/Params';\n\ntype Props = {\n  images: Image[],\n  params: Params,\n  changedCarousel: (key: string, value: number | boolean) => void,\n};\n\nconst Carousel: React.FC<Props> = ({\n  images,\n  params,\n  changedCarousel,\n}) => {\n  const [firstItem, setFirstItem] = useState(1);\n\n  const styleForCarousel = {\n    width: `${params.itemWidth * params.frameSize}px`,\n    transition: `${params.animationDuration}ms`,\n  };\n\n  const styleContainerImage = {\n    transform: `translateX(${-params.itemWidth * (firstItem - 1)}px)`,\n    transition: `transform ${params.animationDuration}ms`,\n  };\n\n  const disabledForNextButton = (!params.infinite\n    && (firstItem === (images.length - params.frameSize + 1)))\n    || params.frameSize === images.length;\n\n  const disabledForPrevButton = firstItem === 1 && !params.infinite;\n\n  const styleImage = {\n    width: `${params.itemWidth}px`,\n    height: `${params.itemWidth}px`,\n    maxWidth: 'fit-content',\n  };\n\n  const nextButton = () => {\n    let nextItem = firstItem + params.step;\n\n    if ((nextItem + params.frameSize) > images.length) {\n      nextItem = images.length - params.frameSize + 1;\n    }\n\n    if (params.infinite && (firstItem === nextItem)) {\n      nextItem = 1;\n    }\n\n    setFirstItem(nextItem);\n  };\n\n  const prevButton = () => {\n    let prevItem = firstItem - params.step;\n\n    if (prevItem < 1) {\n      prevItem = 1;\n    }\n\n    if (params.infinite && (firstItem === prevItem)) {\n      prevItem = 10 - (params.step - 1);\n    }\n\n    setFirstItem(prevItem);\n  };\n\n  const changeFrameSize = (event: React.ChangeEvent<HTMLInputElement>) => {\n    changedCarousel('frameSize', +event.target.value);\n\n    if ((params.frameSize + firstItem) > images.length) {\n      if ((images.length - params.frameSize) > 0) {\n        setFirstItem(images.length - params.frameSize);\n      } else {\n        setFirstItem(1);\n      }\n    }\n  };\n\n  const handleOnChange = (input: string) => (\n    event: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    const value = +event.target.value;\n\n    changedCarousel(input, value);\n\n    if (input === 'frameSize' && (value + firstItem) > images.length) {\n      if ((images.length - value) > 0) {\n        setFirstItem(images.length - value);\n      } else {\n        setFirstItem(1);\n      }\n    }\n  };\n\n  return (\n    <div className=\"Carousel\">\n      <div\n        className=\"Carousel__images\"\n        style={styleForCarousel}\n      >\n        <ul className=\"Carousel__list\">\n          {images.map(currentImage => (\n            <li\n              key={currentImage.id}\n              style={styleContainerImage}\n            >\n              <img\n                style={styleImage}\n                src={currentImage.url}\n                alt={currentImage.id.toFixed()}\n              />\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"Carousel__form\">\n        <div className=\"Carousel__button-section\">\n          <button\n            className=\"button is-primary\"\n            type=\"button\"\n            onClick={prevButton}\n            disabled={disabledForPrevButton}\n          >\n            Prev\n          </button>\n\n          <button\n            className=\"button is-primary\"\n            type=\"button\"\n            onClick={nextButton}\n            disabled={disabledForNextButton}\n          >\n            Next\n          </button>\n        </div>\n\n        <div className=\"form\">\n          <label\n            className=\"label\"\n            htmlFor=\"step\"\n          >\n            <span>\n              Step\n            </span>\n\n            <input\n              type=\"number\"\n              name=\"step\"\n              className=\"input\"\n              min={1}\n              value={params.step}\n              max={images.length - 1}\n              onChange={handleOnChange('step')}\n            />\n          </label>\n\n          <label\n            className=\"label\"\n            htmlFor=\"frameSize\"\n          >\n            <span>\n              Frame size\n            </span>\n\n            <input\n              type=\"number\"\n              name=\"frameSize\"\n              className=\"input\"\n              min={1}\n              max={images.length}\n              value={params.frameSize}\n              onChange={changeFrameSize}\n            />\n          </label>\n\n          <label\n            className=\"label\"\n            htmlFor=\"itemWidth\"\n          >\n            <span>\n              Item width\n            </span>\n\n            <input\n              type=\"number\"\n              name=\"itemWidth\"\n              className=\"input\"\n              min={100}\n              max={600}\n              step={20}\n              value={params.itemWidth}\n              onChange={handleOnChange('itemWidth')}\n            />\n          </label>\n\n          <label\n            className=\"label\"\n            htmlFor=\"animationDuration\"\n          >\n            <span>\n              Animation duration\n            </span>\n\n            <input\n              type=\"number\"\n              name=\"animationDuration\"\n              className=\"input\"\n              min={100}\n              max={3000}\n              step={500}\n              value={params.animationDuration}\n              onChange={handleOnChange('animationDuration')}\n            />\n          </label>\n\n          <label className=\"label\">\n            Infinity:\n            <input\n              name=\"infinity\"\n              type=\"checkbox\"\n              className=\"checkbox\"\n              defaultChecked={params.infinite}\n              onChange={(e) => changedCarousel('infinite', e.target.checked)}\n            />\n          </label>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import { useState } from 'react';\nimport imagesFromServer from './data/images.json';\n\nimport './App.scss';\n\nimport Carousel from './components/Carousel';\n\nimport { Image } from './types/Image';\nimport { Params } from './types/Params';\n\nconst defaultSettings = {\n  firstImg: 1,\n  step: 3,\n  frameSize: 3,\n  itemWidth: 130,\n  animationDuration: 1000,\n  infinite: false,\n};\n\nfunction getPreparedImages(img: Image[], filterParams: Params): Image[] {\n  const firstImgIndex = img.findIndex(el => el.id === filterParams.firstImg);\n\n  return [...img].slice(firstImgIndex);\n}\n\nconst App = () => {\n  const [params, setParams] = useState(defaultSettings);\n  const images = getPreparedImages(imagesFromServer, params);\n  const changeParams = (key: string, value: number | boolean) => {\n    const validValue = value;\n\n    setParams(previousParams => {\n      return { ...previousParams, [key]: validValue };\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      <h1 data-cy=\"title\" className=\"title\">\n        {`Carousel with ${images.length} images`}\n      </h1>\n\n      <Carousel\n        images={images}\n        params={params}\n        changedCarousel={changeParams}\n      />\n\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nimport 'bulma';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}